//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-33567101
// Cuda compilation tools, release 12.3, V12.3.107
// Based on NVVM 7.0.1
//

.version 8.3
.target sm_52
.address_size 64

	// .globl	update_weights

.visible .entry update_weights(
	.param .u64 update_weights_param_0,
	.param .f64 update_weights_param_1,
	.param .u64 update_weights_param_2,
	.param .f64 update_weights_param_3,
	.param .u32 update_weights_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [update_weights_param_0];
	ld.param.f64 	%fd1, [update_weights_param_1];
	ld.param.u64 	%rd2, [update_weights_param_2];
	ld.param.f64 	%fd2, [update_weights_param_3];
	ld.param.u32 	%r2, [update_weights_param_4];
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r3;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd3, [%rd5];
	mul.f64 	%fd4, %fd3, %fd1;
	mul.f64 	%fd5, %fd4, %fd2;
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f64 	%fd6, [%rd7];
	sub.f64 	%fd7, %fd6, %fd5;
	st.global.f64 	[%rd7], %fd7;

$L__BB0_2:
	ret;

}
	// .globl	add_input
.visible .entry add_input(
	.param .u64 add_input_param_0,
	.param .u64 add_input_param_1,
	.param .u32 add_input_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [add_input_param_0];
	ld.param.u64 	%rd2, [add_input_param_1];
	ld.param.u32 	%r2, [add_input_param_2];
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r3;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f64 	[%rd7], %fd1;

$L__BB1_2:
	ret;

}
	// .globl	compute_layer
.visible .entry compute_layer(
	.param .u64 compute_layer_param_0,
	.param .u64 compute_layer_param_1,
	.param .u64 compute_layer_param_2,
	.param .u64 compute_layer_param_3,
	.param .u64 compute_layer_param_4,
	.param .f64 compute_layer_param_5,
	.param .u32 compute_layer_param_6,
	.param .u32 compute_layer_param_7,
	.param .u32 compute_layer_param_8
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<45>;
	.reg .f64 	%fd<75>;
	.reg .b64 	%rd<38>;


	ld.param.u64 	%rd20, [compute_layer_param_0];
	ld.param.u64 	%rd18, [compute_layer_param_2];
	ld.param.u64 	%rd19, [compute_layer_param_3];
	ld.param.u64 	%rd21, [compute_layer_param_4];
	ld.param.f64 	%fd12, [compute_layer_param_5];
	ld.param.u32 	%r15, [compute_layer_param_6];
	ld.param.u32 	%r17, [compute_layer_param_7];
	ld.param.u32 	%r16, [compute_layer_param_8];
	cvta.to.global.u64 	%rd1, %rd21;
	cvta.to.global.u64 	%rd2, %rd20;
	mov.u32 	%r18, %ntid.x;
	mov.u32 	%r19, %ctaid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r1, %r19, %r18, %r20;
	cvt.rn.f64.s32 	%fd13, %r16;
	sub.f64 	%fd14, %fd12, %fd13;
	cvt.rzi.s32.f64 	%r2, %fd14;
	setp.ge.s32 	%p1, %r1, %r17;
	@%p1 bra 	$L__BB2_12;

	cvta.to.global.u64 	%rd22, %rd18;
	cvt.rn.f64.s32 	%fd16, %r1;
	add.f64 	%fd17, %fd16, %fd12;
	cvt.rzi.s32.f64 	%r21, %fd17;
	cvt.s64.s32 	%rd3, %r21;
	mul.wide.s32 	%rd23, %r21, 8;
	add.s64 	%rd4, %rd2, %rd23;
	mov.f64 	%fd73, 0d0000000000000000;
	mov.u64 	%rd24, 0;
	st.global.u64 	[%rd4], %rd24;
	add.s64 	%rd5, %rd22, %rd23;
	st.global.u64 	[%rd5], %rd24;
	setp.lt.s32 	%p2, %r16, 1;
	@%p2 bra 	$L__BB2_8;

	add.s32 	%r23, %r16, -1;
	and.b32  	%r44, %r16, 3;
	setp.lt.u32 	%p3, %r23, 3;
	mov.u32 	%r43, 0;
	mov.f64 	%fd73, 0d0000000000000000;
	@%p3 bra 	$L__BB2_5;

	sub.s32 	%r42, %r16, %r44;
	mul.wide.s32 	%rd25, %r2, 8;
	add.s64 	%rd26, %rd2, %rd25;
	add.s64 	%rd35, %rd26, 16;
	mad.lo.s32 	%r25, %r16, %r1, %r15;
	mul.wide.s32 	%rd27, %r25, 8;
	add.s64 	%rd28, %rd1, %rd27;
	add.s64 	%rd34, %rd28, 16;
	mov.u32 	%r43, 0;
	mov.f64 	%fd73, 0d0000000000000000;

$L__BB2_4:
	ld.global.f64 	%fd20, [%rd34+-16];
	ld.global.f64 	%fd21, [%rd35+-16];
	fma.rn.f64 	%fd22, %fd21, %fd20, %fd73;
	st.global.f64 	[%rd5], %fd22;
	ld.global.f64 	%fd23, [%rd34+-8];
	ld.global.f64 	%fd24, [%rd35+-8];
	fma.rn.f64 	%fd25, %fd24, %fd23, %fd22;
	st.global.f64 	[%rd5], %fd25;
	ld.global.f64 	%fd26, [%rd34];
	ld.global.f64 	%fd27, [%rd35];
	fma.rn.f64 	%fd28, %fd27, %fd26, %fd25;
	st.global.f64 	[%rd5], %fd28;
	ld.global.f64 	%fd29, [%rd34+8];
	ld.global.f64 	%fd30, [%rd35+8];
	fma.rn.f64 	%fd73, %fd30, %fd29, %fd28;
	st.global.f64 	[%rd5], %fd73;
	add.s32 	%r43, %r43, 4;
	add.s64 	%rd35, %rd35, 32;
	add.s64 	%rd34, %rd34, 32;
	add.s32 	%r42, %r42, -4;
	setp.ne.s32 	%p4, %r42, 0;
	@%p4 bra 	$L__BB2_4;

$L__BB2_5:
	setp.eq.s32 	%p5, %r44, 0;
	@%p5 bra 	$L__BB2_8;

	add.s32 	%r26, %r43, %r15;
	mad.lo.s32 	%r27, %r16, %r1, %r26;
	mul.wide.s32 	%rd29, %r27, 8;
	add.s64 	%rd37, %rd1, %rd29;
	add.s32 	%r28, %r2, %r43;
	mul.wide.s32 	%rd30, %r28, 8;
	add.s64 	%rd36, %rd2, %rd30;

$L__BB2_7:
	.pragma "nounroll";
	ld.global.f64 	%fd31, [%rd37];
	ld.global.f64 	%fd32, [%rd36];
	fma.rn.f64 	%fd73, %fd32, %fd31, %fd73;
	st.global.f64 	[%rd5], %fd73;
	add.s64 	%rd37, %rd37, 8;
	add.s64 	%rd36, %rd36, 8;
	add.s32 	%r44, %r44, -1;
	setp.ne.s32 	%p6, %r44, 0;
	@%p6 bra 	$L__BB2_7;

$L__BB2_8:
	cvta.to.global.u64 	%rd31, %rd19;
	shl.b64 	%rd32, %rd3, 3;
	add.s64 	%rd33, %rd31, %rd32;
	ld.global.f64 	%fd33, [%rd33];
	add.f64 	%fd7, %fd33, %fd73;
	st.global.f64 	[%rd5], %fd7;
	mov.f64 	%fd34, 0d4338000000000000;
	mov.f64 	%fd35, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd36, %fd7, %fd35, %fd34;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r12, %temp}, %fd36;
	}
	mov.f64 	%fd37, 0dC338000000000000;
	add.rn.f64 	%fd38, %fd36, %fd37;
	mov.f64 	%fd39, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd40, %fd38, %fd39, %fd7;
	mov.f64 	%fd41, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd42, %fd38, %fd41, %fd40;
	mov.f64 	%fd43, 0d3E928AF3FCA213EA;
	mov.f64 	%fd44, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd45, %fd44, %fd42, %fd43;
	mov.f64 	%fd46, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd47, %fd45, %fd42, %fd46;
	mov.f64 	%fd48, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd49, %fd47, %fd42, %fd48;
	mov.f64 	%fd50, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd51, %fd49, %fd42, %fd50;
	mov.f64 	%fd52, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd53, %fd51, %fd42, %fd52;
	mov.f64 	%fd54, 0d3F81111111122322;
	fma.rn.f64 	%fd55, %fd53, %fd42, %fd54;
	mov.f64 	%fd56, 0d3FA55555555502A1;
	fma.rn.f64 	%fd57, %fd55, %fd42, %fd56;
	mov.f64 	%fd58, 0d3FC5555555555511;
	fma.rn.f64 	%fd59, %fd57, %fd42, %fd58;
	mov.f64 	%fd60, 0d3FE000000000000B;
	fma.rn.f64 	%fd61, %fd59, %fd42, %fd60;
	mov.f64 	%fd62, 0d3FF0000000000000;
	fma.rn.f64 	%fd63, %fd61, %fd42, %fd62;
	fma.rn.f64 	%fd64, %fd63, %fd42, %fd62;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd64;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r14}, %fd64;
	}
	shl.b32 	%r29, %r12, 20;
	add.s32 	%r30, %r14, %r29;
	mov.b64 	%fd74, {%r13, %r30};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %fd7;
	}
	mov.b32 	%f2, %r31;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p7, %f1, 0f4086232B;
	@%p7 bra 	$L__BB2_11;

	setp.lt.f64 	%p8, %fd7, 0d0000000000000000;
	add.f64 	%fd65, %fd7, 0d7FF0000000000000;
	selp.f64 	%fd74, 0d0000000000000000, %fd65, %p8;
	setp.geu.f32 	%p9, %f1, 0f40874800;
	@%p9 bra 	$L__BB2_11;

	shr.u32 	%r32, %r12, 31;
	add.s32 	%r33, %r12, %r32;
	shr.s32 	%r34, %r33, 1;
	shl.b32 	%r35, %r34, 20;
	add.s32 	%r36, %r14, %r35;
	mov.b64 	%fd66, {%r13, %r36};
	sub.s32 	%r37, %r12, %r34;
	shl.b32 	%r38, %r37, 20;
	add.s32 	%r39, %r38, 1072693248;
	mov.u32 	%r40, 0;
	mov.b64 	%fd67, {%r40, %r39};
	mul.f64 	%fd74, %fd66, %fd67;

$L__BB2_11:
	add.f64 	%fd68, %fd74, 0d3FF0000000000000;
	rcp.rn.f64 	%fd69, %fd68;
	st.global.f64 	[%rd4], %fd69;

$L__BB2_12:
	ret;

}
	// .globl	learn_output
.visible .entry learn_output(
	.param .u64 learn_output_param_0,
	.param .u64 learn_output_param_1,
	.param .u64 learn_output_param_2,
	.param .u64 learn_output_param_3,
	.param .u64 learn_output_param_4,
	.param .f64 learn_output_param_5,
	.param .u32 learn_output_param_6,
	.param .u32 learn_output_param_7,
	.param .u32 learn_output_param_8,
	.param .u32 learn_output_param_9,
	.param .f64 learn_output_param_10
)
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<31>;
	.reg .f64 	%fd<60>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd20, [learn_output_param_0];
	ld.param.u64 	%rd17, [learn_output_param_1];
	ld.param.u64 	%rd18, [learn_output_param_2];
	ld.param.u64 	%rd19, [learn_output_param_3];
	ld.param.u64 	%rd21, [learn_output_param_4];
	ld.param.f64 	%fd9, [learn_output_param_5];
	ld.param.u32 	%r12, [learn_output_param_6];
	ld.param.u32 	%r15, [learn_output_param_7];
	ld.param.u32 	%r13, [learn_output_param_8];
	ld.param.u32 	%r14, [learn_output_param_9];
	ld.param.f64 	%fd10, [learn_output_param_10];
	cvta.to.global.u64 	%rd1, %rd21;
	cvta.to.global.u64 	%rd2, %rd20;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	cvt.rn.f64.s32 	%fd11, %r13;
	sub.f64 	%fd12, %fd9, %fd11;
	cvt.rzi.s32.f64 	%r2, %fd12;
	setp.ge.s32 	%p1, %r1, %r15;
	@%p1 bra 	$L__BB3_9;

	cvta.to.global.u64 	%rd22, %rd18;
	cvt.rn.f64.s32 	%fd13, %r1;
	add.f64 	%fd14, %fd13, %fd9;
	cvt.rzi.s32.f64 	%r19, %fd14;
	setp.eq.s32 	%p2, %r1, %r14;
	selp.f64 	%fd15, 0d3FF0000000000000, 0d0000000000000000, %p2;
	mov.f64 	%fd16, 0d3FF0000000000000;
	cvt.s64.s32 	%rd3, %r19;
	mul.wide.s32 	%rd23, %r19, 8;
	add.s64 	%rd24, %rd22, %rd23;
	ld.global.f64 	%fd17, [%rd24];
	sub.f64 	%fd18, %fd16, %fd17;
	mul.f64 	%fd19, %fd17, %fd18;
	add.s64 	%rd25, %rd2, %rd23;
	ld.global.f64 	%fd20, [%rd25];
	sub.f64 	%fd21, %fd20, %fd15;
	add.f64 	%fd22, %fd21, %fd21;
	mul.f64 	%fd59, %fd19, %fd22;
	cvta.to.global.u64 	%rd26, %rd17;
	add.s64 	%rd4, %rd26, %rd23;
	st.global.f64 	[%rd4], %fd59;
	setp.lt.s32 	%p3, %r13, 1;
	@%p3 bra 	$L__BB3_8;

	add.s32 	%r21, %r13, -1;
	and.b32  	%r30, %r13, 3;
	setp.lt.u32 	%p4, %r21, 3;
	mov.u32 	%r29, 0;
	@%p4 bra 	$L__BB3_5;

	sub.s32 	%r28, %r13, %r30;
	mul.wide.s32 	%rd27, %r2, 8;
	add.s64 	%rd28, %rd2, %rd27;
	add.s64 	%rd37, %rd28, 16;
	mad.lo.s32 	%r23, %r13, %r1, %r12;
	mul.wide.s32 	%rd29, %r23, 8;
	add.s64 	%rd30, %rd1, %rd29;
	add.s64 	%rd36, %rd30, 16;
	mov.u32 	%r29, 0;

$L__BB3_4:
	ld.global.f64 	%fd24, [%rd37+-16];
	mul.f64 	%fd25, %fd59, %fd24;
	mul.f64 	%fd26, %fd25, %fd10;
	ld.global.f64 	%fd27, [%rd36+-16];
	sub.f64 	%fd28, %fd27, %fd26;
	st.global.f64 	[%rd36+-16], %fd28;
	ld.global.f64 	%fd29, [%rd37+-8];
	ld.global.f64 	%fd30, [%rd4];
	mul.f64 	%fd31, %fd30, %fd29;
	mul.f64 	%fd32, %fd31, %fd10;
	ld.global.f64 	%fd33, [%rd36+-8];
	sub.f64 	%fd34, %fd33, %fd32;
	st.global.f64 	[%rd36+-8], %fd34;
	ld.global.f64 	%fd35, [%rd37];
	ld.global.f64 	%fd36, [%rd4];
	mul.f64 	%fd37, %fd36, %fd35;
	mul.f64 	%fd38, %fd37, %fd10;
	ld.global.f64 	%fd39, [%rd36];
	sub.f64 	%fd40, %fd39, %fd38;
	st.global.f64 	[%rd36], %fd40;
	ld.global.f64 	%fd41, [%rd37+8];
	ld.global.f64 	%fd42, [%rd4];
	mul.f64 	%fd43, %fd42, %fd41;
	mul.f64 	%fd44, %fd43, %fd10;
	ld.global.f64 	%fd45, [%rd36+8];
	sub.f64 	%fd46, %fd45, %fd44;
	st.global.f64 	[%rd36+8], %fd46;
	add.s32 	%r29, %r29, 4;
	ld.global.f64 	%fd59, [%rd4];
	add.s64 	%rd37, %rd37, 32;
	add.s64 	%rd36, %rd36, 32;
	add.s32 	%r28, %r28, -4;
	setp.ne.s32 	%p5, %r28, 0;
	@%p5 bra 	$L__BB3_4;

$L__BB3_5:
	setp.eq.s32 	%p6, %r30, 0;
	@%p6 bra 	$L__BB3_8;

	add.s32 	%r24, %r29, %r12;
	mad.lo.s32 	%r25, %r13, %r1, %r24;
	mul.wide.s32 	%rd31, %r25, 8;
	add.s64 	%rd39, %rd1, %rd31;
	add.s32 	%r26, %r2, %r29;
	mul.wide.s32 	%rd32, %r26, 8;
	add.s64 	%rd38, %rd2, %rd32;

$L__BB3_7:
	.pragma "nounroll";
	ld.global.f64 	%fd47, [%rd38];
	mul.f64 	%fd48, %fd59, %fd47;
	mul.f64 	%fd49, %fd48, %fd10;
	ld.global.f64 	%fd50, [%rd39];
	sub.f64 	%fd51, %fd50, %fd49;
	st.global.f64 	[%rd39], %fd51;
	ld.global.f64 	%fd59, [%rd4];
	add.s64 	%rd39, %rd39, 8;
	add.s64 	%rd38, %rd38, 8;
	add.s32 	%r30, %r30, -1;
	setp.ne.s32 	%p7, %r30, 0;
	@%p7 bra 	$L__BB3_7;

$L__BB3_8:
	cvta.to.global.u64 	%rd33, %rd19;
	shl.b64 	%rd34, %rd3, 3;
	add.s64 	%rd35, %rd33, %rd34;
	ld.global.f64 	%fd52, [%rd35];
	mul.f64 	%fd53, %fd59, %fd10;
	sub.f64 	%fd54, %fd52, %fd53;
	st.global.f64 	[%rd35], %fd54;

$L__BB3_9:
	ret;

}

